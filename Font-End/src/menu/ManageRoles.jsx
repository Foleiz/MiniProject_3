import React, { useState, useEffect } from "react";
import { NavLink } from "react-router-dom";
import axios from "axios";
import Swal from "sweetalert2";
import "../css/ManageRoles.css";

// Component for the "‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å" (Main Menu) tab
const MainMenuTab = () => {
  return (
    <div className="content-tab">
      <div className="tab-header">
        <NavLink to="/">
          <span className="home-icon">üè†</span>
        </NavLink>
        <span className="tab-title">‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</span>
      </div>
      <div className="roles-table">
        <table className="permissions-table">
          <thead>
            <tr>
              <th></th>
              <th>‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</th>
              <th>‡πÅ‡∏ú‡∏ô‡∏Å</th>
              <th>Driver</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</td>
              <td>
                <input
                  type="checkbox"
                  className="permission-checkbox"
                  defaultChecked
                />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td></td>
            </tr>
            <tr>
              <td>‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå</td>
              <td>
                <input
                  type="checkbox"
                  className="permission-checkbox"
                  defaultChecked
                />
              </td>
              <td>
                <input
                  type="checkbox"
                  className="permission-checkbox"
                  defaultChecked
                />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td></td>
            </tr>
            <tr>
              <td>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á</td>
              <td>
                <input
                  type="checkbox"
                  className="permission-checkbox"
                  defaultChecked
                />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td></td>
            </tr>
            <tr>
              <td>‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</td>
              <td>
                <input
                  type="checkbox"
                  className="permission-checkbox"
                  defaultChecked
                />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td></td>
            </tr>
            <tr>
              <td>‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏á‡∏£‡∏ñ</td>
              <td>
                <input
                  type="checkbox"
                  className="permission-checkbox"
                  defaultChecked
                />
              </td>
              <td>
                <input type="checkbox" className="permission-checkbox" />
              </td>
              <td>
                <input
                  type="checkbox"
                  className="permission-checkbox"
                  defaultChecked
                />
              </td>
              <td></td>
            </tr>
          </tbody>
        </table>
      </div>
      <div className="no-data-placeholder">
        <h3>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
      </div>
    </div>
  );
};

// Component for the "‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á" (Position Menu) tab
const PositionMenuTab = () => {
  return (
    <div className="content-tab">
      <div className="search-and-buttons">
        <input
          type="text"
          placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠,‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"
          className="search-input"
        />
      </div>
      <div className="roles-table">
        <table className="permissions-table">
          <thead>
            <tr>
              <th>
                <input type="checkbox" className="select-all-checkbox" />
              </th>
              <th>‡∏£‡∏´‡∏±‡∏™‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á</th>
              <th></th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>
                <input type="checkbox" className="row-checkbox" />
              </td>
              <td>P001</td>
              <td>Admin</td>
              <td>
                <button className="setting-btn">‚öôÔ∏è</button>
              </td>
            </tr>
            <tr>
              <td>
                <input type="checkbox" className="row-checkbox" />
              </td>
              <td>P002</td>
              <td>Driver</td>
              <td>
                <button className="setting-btn">‚öôÔ∏è</button>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  );
};

// Component for the "‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ú‡∏ô‡∏Å" (Department Menu) tab
const DepartmentMenuTab = () => {
  const [departments, setDepartments] = useState([]);
  const [form, setForm] = useState({ id: "", name: "" });
  const [editingId, setEditingId] = useState(null);

  // Load departments from database
  const fetchDepartments = async () => {
    try {
      const res = await axios.get("http://localhost:3000/departments");
      setDepartments(res.data);
    } catch (err) {
      console.error(err);
      Swal.fire("Error", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡πÑ‡∏î‡πâ", "error");
    }
  };

  useEffect(() => {
    fetchDepartments();
  }, []);

  const handleFormChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleFormSubmit = async (e) => {
    e.preventDefault();
    try {
      if (editingId) {
        // Update
        await axios.put(`http://localhost:3000/departments/${editingId}`, form);
        Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡πÅ‡∏•‡πâ‡∏ß!", "success");
      } else {
        // Add
        if (form.id && form.name) {
          await axios.post("http://localhost:3000/departments", form);
          Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡πâ‡∏ß!", "success");
        }
      }
      setForm({ id: "", name: "" });
      setEditingId(null);
      fetchDepartments();
    } catch (err) {
      console.error(err);
      Swal.fire("Error", "‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", "error");
    }
  };

  const handleDelete = async (id) => {
    const result = await Swal.fire({
      title: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
      text: "‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "‡πÉ‡∏ä‡πà, ‡∏•‡∏ö‡πÄ‡∏•‡∏¢!",
    });

    if (result.isConfirmed) {
      try {
        await axios.delete(`http://localhost:3000/departments/${id}`);
        Swal.fire("‡∏•‡∏ö‡πÅ‡∏•‡πâ‡∏ß!", "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏Å‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß", "success");
        fetchDepartments();
      } catch (err) {
        console.error(err);
        Swal.fire("Error", "‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", "error");
      }
    }
  };

  const handleEdit = (dept) => {
    setForm(dept);
    setEditingId(dept.id);
  };

  return (
    <div className="content-tab">
      <div className="search-and-buttons">
        <input
          type="text"
          placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠,‡πÅ‡∏ú‡∏ô‡∏Å"
          className="search-input"
        />
      </div>
      <form className="add-form-container" onSubmit={handleFormSubmit}>
        <input
          type="text"
          name="id"
          placeholder="‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ú‡∏ô‡∏Å"
          value={form.id}
          onChange={handleFormChange}
          disabled={!!editingId}
          required
        />
        <input
          type="text"
          name="name"
          placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å"
          value={form.name}
          onChange={handleFormChange}
          required
        />
        <button type="submit">{editingId ? "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏ú‡∏ô‡∏Å" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ú‡∏ô‡∏Å"}</button>
      </form>
      <div className="roles-table">
        <table className="permissions-table">
          <thead>
            <tr>
              <th>
                <input type="checkbox" className="select-all-checkbox" />
              </th>
              <th>‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ú‡∏ô‡∏Å</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏Å</th>
              <th>‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</th>
            </tr>
          </thead>
          <tbody>
            {departments.map((dept) => (
              <tr key={dept.id}>
                <td>
                  <input type="checkbox" className="row-checkbox" />
                </td>
                <td>{dept.id}</td>
                <td>{dept.name}</td>
                <td>
                  <button
                    className="setting-btn"
                    onClick={() => handleEdit(dept)}
                  >
                    ‚öôÔ∏è
                  </button>
                  <button
                    className="delete-role-btn"
                    onClick={() => handleDelete(dept.id)}
                  >
                    üóëÔ∏è
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default function ManageRoles() {
  const [activeTab, setActiveTab] = useState("main"); // 'main', 'position', 'department'

  return (
    <div className="manage-roles-content">
      <div className="header-section">
        <div className="search-bar-container">
          <input
            type="text"
            placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠,‡πÅ‡∏ú‡∏ô‡∏Å"
            className="search-input"
          />
          <button className="search-button">üîç</button>
        </div>
        <div className="user-info">
          <span className="settings-icon">‚öôÔ∏è</span>
          <span className="notification-icon">üîî</span>
          <div className="profile">
            <span className="profile-icon">üë§</span>
            <div className="profile-text">
              <span className="profile-name">Admin2</span>
              <span className="profile-role">Admin</span>
            </div>
          </div>
        </div>
      </div>
      <div className="tab-buttons">
        <button
          className={activeTab === "main" ? "tab-button active" : "tab-button"}
          onClick={() => setActiveTab("main")}
        >
          ‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å
        </button>
        <button
          className={
            activeTab === "position" ? "tab-button active" : "tab-button"
          }
          onClick={() => setActiveTab("position")}
        >
          ‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á
        </button>
        <button
          className={
            activeTab === "department" ? "tab-button active" : "tab-button"
          }
          onClick={() => setActiveTab("department")}
        >
          ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ú‡∏ô‡∏Å
        </button>
      </div>

      <div className="content-display">
        {activeTab === "main" && <MainMenuTab />}
        {activeTab === "position" && <PositionMenuTab />}
        {activeTab === "department" && <DepartmentMenuTab />}
      </div>
    </div>
  );
}
