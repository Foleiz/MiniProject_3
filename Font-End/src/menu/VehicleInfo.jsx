import React, { useEffect, useState } from "react";
import "../css/VehicleInfo.css";

export default function VehicleInfo() {
  const [search, setSearch] = useState("");
  const [buses, setBuses] = useState([]);
  const [busTypes, setBusTypes] = useState([]);
  const [showModal, setShowModal] = useState(false);
  const [isEdit, setIsEdit] = useState(false);
  const [form, setForm] = useState({
    BusID: "",
    PlateNumber: "",
    Status: "",
    BusTypeID: "",
  });

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ
  const fetchBuses = async () => {
    try {
      const res = await fetch("http://localhost:3000/buses");
      const data = await res.json();
      setBuses(Array.isArray(data) ? data : []);
    } catch (err) {
      console.error("fetchBuses error:", err);
    }
  };

  // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ
  const fetchBusTypes = async () => {
    try {
      const res = await fetch("http://localhost:3000/bustype");
      const data = await res.json();
      setBusTypes(Array.isArray(data) ? data : []);
    } catch (err) {
      console.error("fetchBusTypes error:", err);
    }
  };

  useEffect(() => {
    fetchBuses();
    fetchBusTypes();
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏Ñ‡πà‡∏≤ form
  const handleChange = (e) =>
    setForm({ ...form, [e.target.name]: e.target.value });

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ‡πÉ‡∏´‡∏°‡πà
  const handleAdd = async () => {
    await fetch("http://localhost:3000/buses", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(form),
    });
    fetchBuses();
    closeModal();
  };

  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏ñ
  const handleEdit = (bus) => {
    setIsEdit(true);
    setForm(bus);
    setShowModal(true);
  };

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
  const handleUpdate = async () => {
    await fetch(`http://localhost:3000/buses/${form.BusID}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(form),
    });
    fetchBuses();
    closeModal();
  };

  // ‡∏•‡∏ö
  const handleDelete = async (id) => {
    if (!window.confirm("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö?")) return;
    await fetch(`http://localhost:3000/buses/${id}`, { method: "DELETE" });
    fetchBuses();
  };

  const closeModal = () => {
    setShowModal(false);
    setIsEdit(false);
    setForm({ BusID: "", PlateNumber: "", Status: "", BusTypeID: "" });
  };

  // filter ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  const filteredBuses = buses.filter(
    (bus) =>
      bus.BusID?.toLowerCase().includes(search.toLowerCase()) ||
      bus.PlateNumber?.toLowerCase().includes(search.toLowerCase()) ||
      bus.TypeName?.toLowerCase().includes(search.toLowerCase()) ||
      bus.Status?.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className="vehicleinfo-container">
      {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ö‡∏ô*/}
      <div className="vehicleinfo-top-box">
        <h3>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</h3>
        <div className="vehicleinfo-top-row">
          <div className="vehicleinfo-search-box">
            <input
              type="text"
              placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ"
              value={search}
              onChange={(e) => setSearch(e.target.value)}
            />
            <span className="search-icon">üîç</span>
          </div>
          <button
            className="vehicleinfo-btn-add"
            onClick={() => setShowModal(true)}
          >
            ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ‡πÉ‡∏´‡∏°‡πà
          </button>
        </div>
      </div>

      {/* ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏•‡πà‡∏≤‡∏á ‡πÇ‡∏ä‡∏ß‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ*/}
      <div className="vehicleinfo-table-box">
        <table>
          <thead>
            <tr>
              <th>‡∏£‡∏´‡∏±‡∏™</th>
              <th>‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ</th>
              <th>‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ</th>
              <th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
              <th>‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
            </tr>
          </thead>
          <tbody>
            {filteredBuses.length > 0 ? (
              filteredBuses.map((bus) => (
                <tr key={bus.BusID}>
                  <td>{bus.BusID}</td>
                  <td>{bus.TypeName}</td>
                  <td>{bus.PlateNumber}</td>
                  <td>{bus.Status}</td>
                  <td>
                    <button
                      className="vehicleinfo-btn-edit"
                      onClick={() => handleEdit(bus)}
                    >
                      ‚úèÔ∏è
                    </button>
                    <button
                      className="vehicleinfo-btn-delete"
                      onClick={() => handleDelete(bus.BusID)}
                    >
                      üóëÔ∏è
                    </button>
                  </td>
                </tr>
              ))
            ) : (
              <tr>
                <td colSpan="5">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ</td>
              </tr>
            )}
          </tbody>
        </table>
      </div>

      {/* Modal ‡∏´‡∏ô‡πâ‡∏≤ alert‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ*/}
      {showModal && (
        <div className="vehicleinfo-modal-overlay">
          <div className="vehicleinfo-modal-content">
            <h3>{isEdit ? "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ" : "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ"}</h3>
            <input
              name="BusID"
              placeholder="‡∏£‡∏´‡∏±‡∏™‡∏£‡∏ñ"
              onChange={handleChange}
              value={form.BusID}
              disabled={isEdit}
            />
            <input
              name="PlateNumber"
              placeholder="‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ"
              onChange={handleChange}
              value={form.PlateNumber}
            />
            <select
              name="BusTypeID"
              onChange={handleChange}
              value={form.BusTypeID}
            >
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ</option>
              {busTypes.map((bt) => (
                <option key={bt.BusTypeID} value={bt.BusTypeID}>
                  {bt.TypeName}
                </option>
              ))}
            </select>
            <select name="Status" onChange={handleChange} value={form.Status}>
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏ñ</option>
              <option value="‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô">‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
              <option value="‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô">‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</option>
            </select>
            <div className="vehicleinfo-modal-actions">
              <button onClick={closeModal}>‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>
              {isEdit ? (
                <button className="vehicleinfo-btn-add" onClick={handleUpdate}>
                  ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                </button>
              ) : (
                <button className="vehicleinfo-btn-add" onClick={handleAdd}>
                  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏ñ‡πÉ‡∏´‡∏°‡πà
                </button>
              )}
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
